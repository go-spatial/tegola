name: On push
on: [push, pull_request]
jobs:
  test:
    name: Test on Ubuntu
    runs-on: ubuntu-22.04

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        check-latest: true

    - name: Env Debug
      run: |
        go env
        pwd
        echo ${HOME}
        echo ${GITHUB_WORKSPACE}

    - name: Setup test environment
      run: docker compose up -d

    - name: Postgres Debug
      env:
        PGUSER: postgres
        PGHOST: localhost
        PGDATABASE: postgres
        PGPASSWORD: postgres
      run: |
        psql -c "\l"

    - name: Run tests
      env:
        # redis tests
        RUN_REDIS_TESTS: yes

        # AWS S3 tests
        RUN_S3_TESTS: yes
        AWS_TEST_BUCKET: tegola-ci
        AWS_REGION: us-east-2

        # PostGIS tests
        RUN_POSTGIS_TESTS: yes
        PGURI: postgres://postgres:postgres@localhost:5432/tegola
        PGURI_NO_ACCESS: postgres://tegola_no_access:postgres@localhost:5432/tegola
        PGSSLMODE: disable
        PGSSLKEY: ""
        PGSSLCERT: ""
        PGSSLROOTCERT: ""

        # HANA tests
        RUN_HANA_TESTS: yes
        # The credentials were exposed on purpose
        # more information see: https://github.com/go-spatial/tegola/pull/893#discussion_r1136602372
        HANA_CONNECTION_STRING: "hdb://TEGOLACI:iZgd6$nOdhf@917df316-4e01-4a10-be54-eac1b6ab15fb.hana.prod-us10.hanacloud.ondemand.com:443?TLSInsecureSkipVerify&TLSServerName=host&timeout=1000&max_connections=10"
      run: |
        go test -mod vendor -covermode atomic -coverprofile=profile.cov ./...

    - name: Send coverage report to Coveralls
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        go install -mod=vendor github.com/mattn/goveralls
        $(go env GOPATH)/bin/goveralls -coverprofile=profile.cov -service=github

    - name: Build embedded UI
      run: |
        pushd ${GITHUB_WORKSPACE}/server
        go generate ./...
        popd

    - name: Tear down test environment
      run: docker compose down

  govulncheck:
    name: Run govulncheck
    runs-on: ubuntu-22.04
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        check-latest: true

    - name: Install and run go vulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...
